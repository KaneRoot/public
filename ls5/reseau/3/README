Exercice 1 : bit de parité.

Quels sont les types d’erreurs que l’on peut détecter avec ce codage ?
Les erreurs sur le contenu.

Pour essayer le programme rapidement : ./dotest.sh
Le programme fonctionne.


Exercice 2 : codage polynomial.

Quels sont les types d’erreurs que l’on peut détecter avec ce codage ?
Les erreurs sur le contenu.

Pour essayer le programme rapidement : ./dotest.sh

Le programme n'est pas exactement comme demandé (les bits de contrôle sont à droite) mais il fonctionne.
Mon implémentation du codage polynomial utilise les CodeWord_t comme un entier sur 16 bits ce qui me permet de faire très facilement une division de polynômes.
Une fois la division faite je n'ai plus qu'à l'ajouter (opérateur +) au message à transmettre.

Il m'a parru superflu de déplacer à nouveau les bits.

autresfonctions.(c|h) : des fonctions supplémentaires. Comme la division de polynômes, le degré et le déplacement de bits.


Exercice 4.

1. Le code est systématique, car les bits d'info sont séparés des bits de contrôle.

Matrice H : 
0	1	1	1	1	0	0	0
1	0	1	1	0	1	0	0
1	1	0	1	0	0	1	0
1	1	1	0	0	0	0	1


2. Le poids minimum d'une ligne de G est de 4 (4 bits à 1 par ligne).
Le poids de la somme de deux lignes de G est toujours de 4.
Le poids de la somme de trois lignes de G est de 4 également.
Le poids de la somme des quatre lignes de G est de 8 (tous les bits de la ligne sont à 1).

3. Le code peut détecter 3 erreurs et en corriger une.
